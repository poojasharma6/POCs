AWSTemplateFormatVersion: 2010-09-09
Description: AWS Step Functions example for getting notified on AWS Fargate task completion
Resources:
  ECSTaskNotificationStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt [ ECSRunTaskSyncExecutionRole, Arn ]
      DefinitionString:
        !Sub
          - |-
            {
              "Comment": "An example of the Amazon States Language for notification on an AWS Fargate task completion",
              "StartAt": "Run Fargate Task",
              "TimeoutSeconds": 3600,
              "States": {
                "Run Fargate Task": {
                  "Type": "Task",
                  "Resource": "arn:${AWS::Partition}:states:::ecs:runTask.sync",
                  "Parameters": {
                    "LaunchType": "FARGATE",
                    "Cluster": "${ecsClusterArn}",
                    "TaskDefinition": "${ecsTaskDefinitionArn}",
                    "NetworkConfiguration": {
                      "AwsvpcConfiguration": {
                        "Subnets": [
                          "${subnetAz1}",
                          "${subnetAz2}"
                        ],
                        "AssignPublicIp": "ENABLED"
                      }
                    }
                  },
                  "Next": "Notify Success",
                  "Catch": [
                      {
                        "ErrorEquals": [ "States.ALL" ],
                        "Next": "Notify Failure"
                      }
                  ]
                },
                "Notify Success": {
                  "Type": "Task",
                  "Resource": "arn:${AWS::Partition}:states:::sns:publish",
                  "Parameters": {
                    "Message": "AWS Fargate Task started by Step Functions succeeded",
                    "TopicArn": "${snsTopicArn}"
                  },
                  "End": true
                },
                "Notify Failure": {
                  "Type": "Task",
                  "Resource": "arn:${AWS::Partition}:states:::sns:publish",
                  "Parameters": {
                    "Message": "AWS Fargate Task started by Step Functions failed",
                    "TopicArn": "${snsTopicArn}"
                  },
                  "End": true
                }
              }
            }
          - {snsTopicArn: !Ref SNSTopic, ecsClusterArn: !GetAtt ECSCluster.Arn, ecsTaskDefinitionArn: !Ref ECSTaskDefinition, subnetAz1: !Ref PubSubnetAz1, subnetAz2: !Ref PubSubnetAz2}
  ECSRunTaskSyncExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: FargateTaskNotificationAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sns:Publish"
                Resource:
                 - !Ref SNSTopic
              - Effect: Allow
                Action:
                  - "ecs:RunTask"
                Resource:
                  - !Ref ECSTaskDefinition
              - Effect: Allow
                Action:
                  - "ecs:StopTask"
                  - "ecs:DescribeTasks"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "events:PutTargets"
                  - "events:PutRule"
                  - "events:DescribeRule"
                Resource:
                  - !Sub "arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/StepFunctionsGetEventsForECSTaskRule"
  SNSTopic:
    Type: AWS::SNS::Topic
  ECSCluster:
    Type: AWS::ECS::Cluster
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - "FARGATE"
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Image: "amazon/amazon-ecs-sample"
          Name: "fargate-app"
          PortMappings:
          - ContainerPort: 80
            HostPort: 80
            Protocol: tcp
          Essential: true
          EntryPoint:
          - sh
          - "-c"
          Command:
          - /bin/sh -c "echo 'Hello from AWS Step Functions!'"
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
  PubSubnetAz1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      Tags:
        -
          Key: "Name"
          Value: !Join [ "/", [ !Ref ECSCluster , 'Public' ] ]
  PubSubnetAz2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      Tags:
        -
          Key: "Name"
          Value: !Join [ "/", [ !Ref ECSCluster , 'Public' ] ]
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  RouteViaIgw:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  PublicRouteViaIgw:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteViaIgw
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PubSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PubSubnetAz1
      RouteTableId: !Ref RouteViaIgw
  PubSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PubSubnetAz2
      RouteTableId: !Ref RouteViaIgw
  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ECS Allowed Ports
      VpcId: !Ref VPC
Outputs:
  StateMachineArn:
    Value: !Ref ECSTaskNotificationStateMachine
  ExecutionInput:
    Description: Sample input to StartExecution.
    Value:
      >
        {}
